@using TaskRunwayApplication.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<main aria-labelledby="title">
    <div class="auth-container">
        <div class="auth-form">

            <div class="row">
                <div class="col-md-8">
                    <section id="loginForm">
                        <h1 id="authTitle">Welcome to our TaskRunway little world!</h1>
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>Use a local account to log in.</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="offset-md-2 col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="offset-md-2 col-md-10">
                                    <input type="submit" value="Log in" class="btn btn-outline-dark" style="border-block-color:rebeccapurple" />
                                </div>
                            </div>
                            <p>
                                @Html.ActionLink("Register as a new user", "Register")
                            </p>
                            @* Enable this once you have account confirmation enabled for password reset functionality
                                <p>
                                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                                </p>*@
                        }
                    </section>
                </div>
                <div class="col-md-4">

                </div>
            </div>
        </div>
    </div>
</main>
<style>
    .auth-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #f8f9fa;
    }

    .auth-form {
        border: 1px solid #ced4da;
        border-radius: 8px;
        padding: 20px;
        background-color: #ffffff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        width: 100%;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}